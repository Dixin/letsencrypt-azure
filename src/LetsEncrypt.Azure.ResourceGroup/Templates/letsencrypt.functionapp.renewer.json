{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "minLength": 1
    },    
    "webSiteName": {
      "type": "string"
    },
    "vaultName": {
      "type": "string"
    },
    "pfxPass": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "storageConnectionStringName": "blobStorageConnectionString",
    "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "pfxPass": "pfxPassword"
  },
  "resources": [
    {
      "name": "[parameters('vaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "tags": {},
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', parameters('webSiteName'))]"
      ],
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "tenantId": "[reference(concat('Microsoft.Web/sites/',  parameters('webSiteName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/',  parameters('webSiteName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
            "permissions": {
              "keys": [],
              "secrets": [
                "get"
              ],
              "certificates": [],
              "storage": []
            }
          },
          {
            "tenantId": "[reference(concat('Microsoft.Web/sites/', parameters('webSiteName')), '2018-02-01', 'Full').identity.tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', parameters('webSiteName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [],
              "secrets": [
                "get",
                "set",
                "list"
              ],
              "certificates": [
                "get",
                "list",
                "import",
                "update"
              ],
              "storage": []
            }
          }
        ],
        "enabledForTemplateDeployment": true
      },
      "resources": [
        {
          "type": "secrets",
          "name": "[variables('storageConnectionStringName')]",
          "apiVersion": "2018-02-14",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', parameters('vaultName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "properties": {
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountResourceId'),'2015-05-01-preview').key1)]"
          }
        },
        {
          "type": "secrets",
          "name": "[variables('pfxPass')]",
          "apiVersion": "2018-02-14",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', parameters('vaultName'))]",
          ],
          "properties": {
            "value": "[parameters('pfxPass')]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[parameters('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', parameters('webSiteName'))]"
          ],
          "tags": {
            "displayName": "appSettings"
          },
          "properties": {
            "AzureWebJobsDashboard": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('vaultName'), variables('storageConnectionStringName'))).secretUriWithVersion,  ')')]",
            "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('vaultName'), variables('storageConnectionStringName'))).secretUriWithVersion,  ')')]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('vaultName'), variables('storageConnectionStringName'))).secretUriWithVersion,  ')')]",
            "WEBSITE_CONTENTSHARE": "[toLower(parameters('webSiteName'))]",
            "FUNCTIONS_EXTENSION_VERSION": "~2",
            "FUNCTIONS_WORKER_RUNTIME": "dotnet",
            "Vault": "[parameters('vaultName')]",
            "AzureAppService__WebAppName": "[parameters('targetWebAppName')]",
            "AzureAppService__ResourceGroupName": "[parameters('targetResourceGroupName')]",
            "AzureAppService__AzureServicePrincipal__UseManagendIdentity": "true",
            "AzureAppService__AzureSubscription__Tenant": "[subscription().tenantId]",
            "AzureAppService__AzureSubscription__SubscriptionId": "[subscription().id]",
            "AzureAppService__AzureSubscription__AzureRegion": "AzureGlobalCloud",
            "DnsSettings__ZoneName": "[parameters('dnsZoneName')]",
            "DnsSettings__ResourceGroupName": "[parameters('dnsResourceGroupName')]",
            "DnsSettings__AzureServicePrincipal__UseManagendIdentity": "true",
            "DnsSettings__AzureSubscription__Tenant": "[subscription().tenantId]",
            "DnsSettings__AzureSubscription__SubscriptionId": "[subscription().id]",
            "DnsSettings__AzureSubscription__AzureRegion": "AzureGlobalCloud",
            "AcmeDnsRequest__CsrInfo__Organization": "[parameters('csrOrganisation')]",
            "AcmeDnsRequest__RegistrationEmail": "[parameters('acmeRegistrationEmail')]",
            "AcmeDnsRequest__AcmeEnvironment__Name": "[parameters('acmeEnvironment')]",
            "AcmeDnsRequest__Host": "[parameters('acmeHost')]",
            "AcmeDnsRequest__PFXPassword": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('vaultName'), variables('pfxPass'))).secretUriWithVersion,  ')')]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    }
  ],
  "outputs": {}
}